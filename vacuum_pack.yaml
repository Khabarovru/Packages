homeassistant:
  customize:
    sensor.vacuum_battery:
      friendly_name: Xiaomi Vacuum Battery Level
      unit_of_measurement: '%'
    sensor.vacuum_total_cleaned_area:
      friendly_name: Xiaomi Vacuum Total Cleaned Area
      unit_of_measurement: 'm2'
    sensor.vacuum_cleaning_count:
      friendly_name: Xiaomi Vacuum Cleaning Count
      unit_of_measurement: 'times'
    sensor.vacuum_total_cleaning_time:
      friendly_name: Xiaomi Vacuum Total Cleaning Time
      unit_of_measurement: 'minutes'
    sensor.vacuum_main_brush_left:
      friendly_name: Xiaomi Vacuum Main Brush Left
      unit_of_measurement: 'hours'
    sensor.vacuum_side_brush_left:
      friendly_name: Xiaomi Vacuum Side Brush Left
      unit_of_measurement: 'hours'
    sensor.vacuum_filter_left:
      friendly_name: Xiaomi Vacuum Filter Left
      unit_of_measurement: 'hours'
    sensor.vacuum_sensor_dirty_left:
      friendly_name: Xiaomi Vacuum Sensor Dirty Left
      unit_of_measurement: 'hours'
    sensor.vacuum_cleaner_error_sensor:
      friendly_name: Xiaomi Vacuum Error Sensor
    sensor.vacuum_cleaner_status_sensor:
      friendly_name: Xiaomi Vacuum Status Sensor
    sensor.xiaomi_vacuum_fan_speed_state:
      friendly_name: Xiaomi Vacuum Fan Speed State

vacuum:
  - platform: xiaomi_miio
    host: 192.168.1.31
    token: !secret vacuum_token
input_select:
  xiaomi_vacuum:
    name: Xiaomi Vacuum
    options:
      - Quiet
      - Balanced
      - Turbo
      - Max
      - Mop
input_boolean:
  dummy1:
sensor:
# Xiaomi Vacuum Sensors
  - platform: rest
    resource: http://192.168.1.31/api/map/latest
    name: xiaomi_map
    json_attributes:
      - image
      - path
      - charger
      - robot
    value_template: 'OK'
    scan_interval: 5

  - platform: template
    sensors:
      vacuum_battery:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
        device_class: battery
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states('sensor.vacuum_battery')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      vacuum_total_cleaned_area:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.total_cleaned_area }}'
      vacuum_cleaning_count:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_count }}'
      vacuum_total_cleaning_time:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.total_cleaning_time }}'
      vacuum_main_brush_left:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
      vacuum_side_brush_left:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
      vacuum_filter_left:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
      vacuum_sensor_dirty_left:
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}'
      vacuum_cleaner_error_sensor:
        value_template: >-
          {% if states.vacuum.xiaomi_vacuum_cleaner.attributes.error is defined %}
            {{states.vacuum.xiaomi_vacuum_cleaner.attributes.error}}
          {% else %}
            No Error
          {% endif %}
      vacuum_cleaner_status_sensor:
        value_template: >-
          {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}
      xiaomi_vacuum_fan_speed_state:
        value_template: >-
          {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}

automation:
# Vacuum Automations
- id: vacuum_cleaner_error
  alias: Vacuum Cleaner Error
  trigger:
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: 'Error'
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: 'In Error'
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: 'Charging Error'
  action:
    - service: notify.telegram
      data:
        title: 'Пылесос'
        message: >-
          {% if is_state('sensor.vacuum_cleaner_error_sensor', 'No Error')  %}
            {{states.sensor.vacuum_cleaner_status_sensor.state}}
          {% else %}
            {{states.sensor.vacuum_cleaner_error_sensor.state}}
          {% endif %}

- id: vacuum_cleaner_error_solved
  alias: Vacuum Cleaner Error Solved
  trigger:
    - platform: state
      entity_id: sensor.vacuum_cleaner_error_sensor
      to: 'No Error'
  action:
    - service: notify.telegram
      data:
        title: 'Пылесос'
        message: Ошибка устранена

- id: vacuum_cleaner_started
  alias: Vacuum Cleaner Started
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'cleaning'
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'returning'
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'docked'
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'paused'
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'idle'
  action:
    - service: notify.telegram
      data:
        title: 'Пылесос'
        message: >-
          {{states.sensor.vacuum_cleaner_status_sensor.state}}

- id: vacuum_fan_speed_balanced_when_docked
  alias: Vacuum Fan Speed Balanced When Docked
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: 'docked'
  action:
   - service: input_select.select_option
     data:
       option: Balanced
       entity_id: input_select.xiaomi_vacuum

# Xiaomi Fan Speed
- alias: xiaomi vacuum set fan speed
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: input_select.xiaomi_vacuum
  action:
    service: vacuum.set_fan_speed
    data_template:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      fan_speed: >
        {% if is_state('input_select.xiaomi_vacuum', 'Quiet') %}
          Quiet
        {% elif is_state('input_select.xiaomi_vacuum', 'Balanced') %}
          Balanced
        {% elif is_state('input_select.xiaomi_vacuum', 'Turbo') %}
          Turbo
        {% elif is_state('input_select.xiaomi_vacuum', 'Max') %}
          Max
        {% elif is_state('input_select.xiaomi_vacuum', 'Mop') %}
          105
        {% endif %}

# Xiaomi Fan Speed Input Select
- alias: xiaomi vacuum set fan speed
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: sensor.xiaomi_vacuum_fan_speed_state
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.xiaomi_vacuum
      option: >
        {% if is_state('sensor.xiaomi_vacuum_fan_speed_state', 'Quiet') %}
          Quiet
        {% elif is_state('sensor.xiaomi_vacuum_fan_speed_state', 'Balanced') %}
          Balanced
        {% elif is_state('sensor.xiaomi_vacuum_fan_speed_state', 'Turbo') %}
          Turbo
        {% elif is_state('sensor.xiaomi_vacuum_fan_speed_state', 'Max') %}
          Max
        {% endif %}
